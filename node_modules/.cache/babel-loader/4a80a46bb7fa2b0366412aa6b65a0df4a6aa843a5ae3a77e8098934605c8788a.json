{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();export const CartProvider=_ref=>{let{children}=_ref;const[cartItems,setCartItems]=useState([]);const updateCartItem=(itemId,quantity)=>{setCartItems(prevCartItems=>{const updatedCartItems=prevCartItems.map(item=>item.id===itemId?{...item,quantity}:item);return updatedCartItems;});};const addToCart=item=>{setCartItems(prevCartItems=>{const existingItem=prevCartItems.find(cartItem=>cartItem.id===item.id);if(existingItem){const updatedCartItems=prevCartItems.map(item=>item.id===existingItem.id?{...item,quantity:item.quantity+1}:item);return updatedCartItems;}else{return[...prevCartItems,{...item,quantity:1}];}});};return/*#__PURE__*/_jsx(CartContext.Provider,{value:{cartItems,updateCartItem,addToCart},children:children});};export function useCart(){return useContext(CartContext);}","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","CartContext","CartProvider","_ref","children","cartItems","setCartItems","updateCartItem","itemId","quantity","prevCartItems","updatedCartItems","map","item","id","addToCart","existingItem","find","cartItem","Provider","value","useCart"],"sources":["E:/Coding/Guvi Tasks/React Task/Day 28 task/Context Api/src/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst CartContext = createContext();\n\nexport const  CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n\n  const updateCartItem = (itemId, quantity) => {\n    setCartItems((prevCartItems) => {\n      const updatedCartItems = prevCartItems.map((item) =>\n        item.id === itemId ? { ...item, quantity } : item\n      );\n      return updatedCartItems;\n    });\n  };\n\n  const addToCart = (item) => {\n    setCartItems((prevCartItems) => {\n      const existingItem = prevCartItems.find((cartItem) => cartItem.id === item.id);\n      if (existingItem) {\n        const updatedCartItems = prevCartItems.map((item) =>\n          item.id === existingItem.id ? { ...item, quantity: item.quantity + 1 } : item\n        );\n        return updatedCartItems;\n      } else {\n        return [...prevCartItems, { ...item, quantity: 1 }];\n      }\n    });\n  };\n\n  return (\n    <CartContext.Provider value={{ cartItems, updateCartItem, addToCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart() {\n  return useContext(CartContext);\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAO,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAU,cAAc,CAAGA,CAACC,MAAM,CAAEC,QAAQ,GAAK,CAC3CH,YAAY,CAAEI,aAAa,EAAK,CAC9B,KAAM,CAAAC,gBAAgB,CAAGD,aAAa,CAACE,GAAG,CAAEC,IAAI,EAC9CA,IAAI,CAACC,EAAE,GAAKN,MAAM,CAAG,CAAE,GAAGK,IAAI,CAAEJ,QAAS,CAAC,CAAGI,IAC/C,CAAC,CACD,MAAO,CAAAF,gBAAgB,CACzB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAI,SAAS,CAAIF,IAAI,EAAK,CAC1BP,YAAY,CAAEI,aAAa,EAAK,CAC9B,KAAM,CAAAM,YAAY,CAAGN,aAAa,CAACO,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACJ,EAAE,GAAKD,IAAI,CAACC,EAAE,CAAC,CAC9E,GAAIE,YAAY,CAAE,CAChB,KAAM,CAAAL,gBAAgB,CAAGD,aAAa,CAACE,GAAG,CAAEC,IAAI,EAC9CA,IAAI,CAACC,EAAE,GAAKE,YAAY,CAACF,EAAE,CAAG,CAAE,GAAGD,IAAI,CAAEJ,QAAQ,CAAEI,IAAI,CAACJ,QAAQ,CAAG,CAAE,CAAC,CAAGI,IAC3E,CAAC,CACD,MAAO,CAAAF,gBAAgB,CACzB,CAAC,IAAM,CACL,MAAO,CAAC,GAAGD,aAAa,CAAE,CAAE,GAAGG,IAAI,CAAEJ,QAAQ,CAAE,CAAE,CAAC,CAAC,CACrD,CACF,CAAC,CAAC,CACJ,CAAC,CAED,mBACET,IAAA,CAACC,WAAW,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAEf,SAAS,CAAEE,cAAc,CAAEQ,SAAU,CAAE,CAAAX,QAAA,CACnEA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,SAAS,CAAAiB,OAAOA,CAAA,CAAG,CACxB,MAAO,CAAAvB,UAAU,CAACG,WAAW,CAAC,CAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}