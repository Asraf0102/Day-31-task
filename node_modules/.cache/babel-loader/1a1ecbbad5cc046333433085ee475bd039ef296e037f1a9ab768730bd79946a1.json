{"ast":null,"code":"import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const TodoList=()=>{const[todoList,setTodoList]=useState([]);const[name,setName]=useState(\"\");const[description,setDescription]=useState(\"\");const[status]=useState(false);const[errors,setErrors]=useState(\"\");const[statusFilter,setstatusFilter]=useState([]);const[editList,setEditList]=useState([]);// add task\nconst addTodo=event=>{event.preventDefault();if(name.trim()!==\"\"&&description.trim()!==\"\"){const taskData={Name:name,Description:description,Status:status};setTodoList([...todoList,taskData]);setstatusFilter([...statusFilter,taskData]);setName('');setDescription('');setErrors('');}else{setErrors(\"must fill all fields\");}};// filter functions\nconst filterChange=event=>{const value=event.target.value;if(value===\"All\"){const allFilter=todoList.filter(data=>data);setstatusFilter(allFilter);}else if(value===\"NotCompleted\"){const notCompletedFilter=todoList.filter(data=>!data.Status);setstatusFilter(notCompletedFilter);}else{const completedFilter=todoList.filter(data=>data.Status);setstatusFilter(completedFilter);}};// handle edit button \nconst handleEdit=(data,index)=>{// const updatedStatus = statusFilter.map((value, i) =>\n//   i === index ? {  ...editList,...value, } : value\n// );\nconst updatedStatus=[...statusFilter];updatedStatus[index]={...data,...editList};setTodoList(updatedStatus);setstatusFilter(updatedStatus);setEditList(null);};// edit change functions\nconst editChange=(event,data,index)=>{const value=event.target.value;const editData={Name:data.Name,Description:data.Description,// Status:value ===\"true\"?true:false,\nStatus:JSON.parse(value)};setEditList(editData);};// delete function \nconst handleDelete=index=>{const updatedList=[...statusFilter];updatedList.splice(index,1);setTodoList(updatedList);setstatusFilter(updatedList);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"form\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"h1\",{style:{marginLeft:\"20%\"},children:\"My ToDo\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",name:\"name\",placeholder:\"Todo Name\",value:name,onChange:e=>setName(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",name:\"description\",placeholder:\"Todo Description\",value:description,onChange:e=>setDescription(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-add\",onClick:addTodo,children:\"Add Todo\"})}),/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:errors})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"span\",{children:\"My Todo List\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Status Filter\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select form-select-sm\",name:\"statusFilter\",defaultValue:\"All\",onChange:filterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"All\",children:\"ALL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NotCompleted\",children:\"Not Completed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Completed\",children:\"Completed\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Box\",children:statusFilter&&statusFilter.map((data,index)=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"cards\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name \"}),/*#__PURE__*/_jsx(\"br\",{}),\" \",data.Name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description \"}),/*#__PURE__*/_jsx(\"br\",{}),\" \",data.Description]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Status \"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select form-select-sm\",name:\"status\",value:data.Status,onChange:event=>editChange(event,data,index),children:[/*#__PURE__*/_jsx(\"option\",{value:true,children:\"Completed\"}),/*#__PURE__*/_jsx(\"option\",{value:false,children:\"Not Completed\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>handleEdit(data,index),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",style:{marginLeft:\"10px\"},onClick:()=>handleDelete(index),children:\"Delete\"})]},index);})})]})]});};export default TodoList;","map":{"version":3,"names":["useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TodoList","todoList","setTodoList","name","setName","description","setDescription","status","errors","setErrors","statusFilter","setstatusFilter","editList","setEditList","addTodo","event","preventDefault","trim","taskData","Name","Description","Status","filterChange","value","target","allFilter","filter","data","notCompletedFilter","completedFilter","handleEdit","index","updatedStatus","editChange","editData","JSON","parse","handleDelete","updatedList","splice","children","className","style","marginLeft","type","placeholder","onChange","e","onClick","color","defaultValue","map"],"sources":["E:/Coding/Guvi Tasks/React Task/Day 25 task/Todo list/src/todo_app/TodoList.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst TodoList = ()=>{\n    const [todoList,setTodoList] = useState([]);\n    const [name,setName] = useState(\"\");\n    const [description,setDescription] = useState(\"\");\n    const [status] = useState(false);\n    const [errors,setErrors]=useState(\"\");\n    const [statusFilter, setstatusFilter] = useState([]);\n    const[editList,setEditList]=useState([]);\n\n    // add task\nconst addTodo = (event) =>\n{\n    event.preventDefault();\n  if(name.trim()!==\"\"&&description.trim()!==\"\")\n  {\n    const taskData = {\n        Name:name,\n        Description:description,\n        Status:status\n      }\n    \n   setTodoList([...todoList,taskData]);\n   setstatusFilter([...statusFilter,taskData]);\nsetName('');\nsetDescription('');\nsetErrors('');\n  }\n  else{\n    setErrors(\"must fill all fields\")\n  }\n}\n\n// filter functions\nconst filterChange = (event)=>{\nconst value = event.target.value;\nif(value===\"All\")\n{\n    const allFilter =  todoList.filter((data)=>data);\n    setstatusFilter(allFilter);\n}\nelse if(value===\"NotCompleted\"){\nconst notCompletedFilter = todoList.filter((data)=>!data.Status)\nsetstatusFilter(notCompletedFilter);\n}\nelse{\n    const completedFilter = todoList.filter((data)=>data.Status)\n    setstatusFilter(completedFilter);\n}\n}\n// handle edit button \nconst handleEdit = (data,index)=>{\n    // const updatedStatus = statusFilter.map((value, i) =>\n    //   i === index ? {  ...editList,...value, } : value\n    // );\n    const updatedStatus = [...statusFilter];\n    updatedStatus[index] = { ...data, ...editList };\n   setTodoList(updatedStatus);\n   setstatusFilter(updatedStatus);\n    setEditList(null);\n}\n// edit change functions\nconst editChange =  (event,data,index)=>{\n    const value = event.target.value;\n    const editData = {\n        Name:data.Name,\n        Description:data.Description,\n        // Status:value ===\"true\"?true:false,\n        Status:JSON.parse(value)\n    }\n    setEditList(editData);\n    }\n    // delete function \n const handleDelete = (index)=>{\nconst updatedList = [...statusFilter];\nupdatedList.splice(index,1);\nsetTodoList(updatedList);\nsetstatusFilter(updatedList);\n }   \nreturn(\n    <>\n     {/* form */}\n    <div className=\"form\">\n        <form>\n                <div className=\"row\">\n                <h1 style={{marginLeft:\"20%\"}}>My ToDo</h1>\n                </div>\n             <div className=\"row\">\n                   <div className=\"col\">\n                     <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Todo Name\" value={name} onChange={(e)=>setName(e.target.value)}/>\n                    </div>\n                    <div className=\"col\">\n                      <input type=\"text\" className=\"form-control\" name=\"description\" placeholder=\"Todo Description\" value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                    </div>\n                    \n                  <div className=\"col\">\n                     <button className=\"btn btn-primary btn-add\" onClick={addTodo} >Add Todo</button>\n                  </div>\n                  <span style={{color:\"red\"}}>{errors}</span>\n             </div>\n         </form> \n    </div>\n    {/* container  */}\n <div className=\"container\">\n     <div className=\"row\">\n      <div className=\"col\">\n      <span>My Todo List</span>\n      </div>\n      {/* status filter */}\n      <div className=\"col\">\n        <span>Status Filter</span>\n          <select className=\"form-select form-select-sm\" name=\"statusFilter\" defaultValue=\"All\" onChange={filterChange}>\n            <option  value=\"All\">ALL</option>\n            <option  value=\"NotCompleted\">Not Completed</option>\n            <option  value=\"Completed\">Completed</option>\n            \n          </select>\n       </div>\n    </div>\n  {/* box model */}\n    <div className=\"Box\">\n    {/* task mapping */}\n    {statusFilter&& statusFilter.map((data,index) => {\n  return (\n    <div className=\"cards\" key={index}>\n      <p>\n        <label>Name </label>\n        <br/> {data.Name}\n      </p>\n      <p>\n        <label>Description </label>\n        <br /> {data.Description}\n      </p>\n      <p>\n        <label>Status </label>\n        <select className=\"form-select form-select-sm\" name=\"status\" value={data.Status} onChange={(event)=>editChange(event,data,index)}>\n          <option value={true}>Completed</option>\n          <option value={false}>Not Completed</option>\n        </select>\n      </p>\n      <button className=\"btn btn-secondary\" onClick={()=>handleEdit(data,index)} >Edit</button>\n      <button className=\"btn btn-danger\" style={{ marginLeft: \"10px\" }} onClick={()=>handleDelete(index)}>\n       Delete\n      </button>\n    </div>\n  );\n})}\n\n    </div>\n</div>\n\n    </>\n)\n}\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}